% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/luminophor.R
\name{addWidget}
\alias{addWidget}
\title{Adds a new widget to the dock}
\usage{
addWidget(
  proxy,
  id,
  title = "Widget",
  caption = "Widget",
  icon = "",
  closable = TRUE,
  insertmode = "tab-after",
  refwidgetID = NULL,
  relsize = NULL,
  ui = shiny::HTML("I am a widget!")
)
}
\arguments{
\item{proxy}{Either output from the \code{\link{luminophor}} function, or a
\link[=luminophorProxy]{Proxy LuminophoR object}}

\item{id}{ID for luminophor widget}

\item{title}{Title for luminophor widget}

\item{caption}{Caption for luminophor widget}

\item{icon}{Font Awesome icon (specified via the \code{icon} function)}

\item{closable}{Create removable}

\item{insertmode}{How should the widget be added? Options include \code{split-right}, \code{split-left},
\code{split-bottom}, \code{split-top}, \code{tab-before}, and \code{tab-after} (default)}

\item{refwidgetID}{Reference widget ID for \code{insertmode} action}

\item{relsize}{Relative size of widget (between 0 and 1) in relation to \code{refwidget} (or last widget
if \code{refwidget} isn't specified)}

\item{ui}{UI content.  If just text, need to use HTML(...)}
}
\value{
\link[=luminophorProxy]{Proxy LuminophoR object}
}
\description{
Adds a new widget to the dock
}
\examples{
# Add widget on render
if (interactive()) {
  library(shiny)
  library(luminophor)
  shinyApp(
    ui = fluidPage(
      fluidRow(column(12, luminophorOutput('lmo', height='90vh')))
    ),
    server = function(input, output) {
      output$lmo <- renderLuminophor(
        luminophor() \%>\%
          addWidget("mywidget")
      )
    }
  )
}

# Add widget on event
if (interactive()) {
  library(shiny)
  library(luminophor)
  shinyApp(
    ui = fluidPage(
      sidebarLayout(
        sidebarPanel(
          actionButton('add', 'Add Widgets', icon = icon('plus'))
        ),
        mainPanel(
          luminophorOutput('lmo', height='90vh')
        )
      )
    ),
    server = function(input, output) {
      output$lmo <- renderLuminophor(
        luminophor()
      )

      observeEvent(input$add, {
        luminophorProxy('lmo') \%>\%
          addWidget("mywidget")
      })
    }
  )
}

}
\seealso{
\code{\link{removeWidgets}}
}
